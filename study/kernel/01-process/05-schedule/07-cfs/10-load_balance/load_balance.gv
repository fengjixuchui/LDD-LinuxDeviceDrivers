digraph load_balance {

	// 周期性负载均衡器 run_rebalance_domains
	//rebalance_domains -> for_each_domain_LB -> {update_newidle_cost, get_sd_balance_interval, load_balance, update_next_balance};
	rebalance_domains -> load_balance;

	// IDLE 负载均衡器
	//newidle_balance -> {update_misfit_status, update_next_balance, update_blocked_averages, for_each_domain_ILB} -> nohz_newidle_balance;
	//for_each_domain_ILB -> {update_next_balance, load_balance, update_newidle_cost};
	newidle_balance -> load_balance;

	// 负载均衡核心逻辑
	subgraph cluster_0 {
		label = "执行 Load Balance";
		color = blue;

		load_balance:s -> {should_we_balance, find_busiest_group, find_busiest_queue, detach_tasks, attach_tasks, need_active_balance, stop_one_cpu_nowait};

		subgraph cluster_1 {
			label = "寻找 dst CPU";
			color = red;

			should_we_balance -> {group_balance_mask, group_balance_cpu};
		};

		subgraph cluster_2 {
			label = "寻找 src CPU";
			color = red;

			find_busiest_group -> {init_sd_lb_stats, update_sd_lb_stats, sched_energy_enabled, compare_local_busiest_group_type, calculate_imbalance};
			find_busiest_queue -> for_each_sched_group_span -> {fbq_classify_rq, switch_env_migration_type_FBQ};
		};

		subgraph cluster_3 {
			label = "Normal Migration";
			color = red;

			detach_tasks -> {can_migrate_task, switch_env_migration_type_DT, detach_task};
			attach_tasks -> {attach_task};
		};
		subgraph cluster_4 {
			label = "Active Migration";
			color = red;

			need_active_balance -> stop_one_cpu_nowait -> active_load_balance_cpu_stop [style=dashed];
			active_load_balance_cpu_stop -> {detach_one_task, attach_one_task};
		};
	};

	rebalance_domains [label="rebalance_domains"; style=filled; fillcolor=palegreen; shape=oval];
	newidle_balance [label="newidle_balance"; style=filled; fillcolor=palegreen; shape=oval];

	load_balance [label="load_balance"; style=filled; fillcolor=palegreen; shape=oval];
	find_busiest_group [label="find_busiest_group"; style=filled; fillcolor=lightyellow; shape=oval];
	find_busiest_queue [label="find_busiest_queue"; style=filled; fillcolor=lightyellow; shape=oval];
	active_load_balance_cpu_stop [label="active_load_balance_cpu_stop"; style=filled; fillcolor=lightyellow; shape=oval];
	can_migrate_task [label="can_migrate_task"; style=filled; fillcolor=lightyellow; shape=oval];
}